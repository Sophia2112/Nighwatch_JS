{"report":{"reportPrefix":"CHROME_128.0.6613.86__","assertionsCount":3,"lastError":null,"skippedAtRuntime":[],"skippedByUser":[],"skipped":[],"time":"44.96","timeMs":44956,"completed":{"DragDrop":{"time":"22.48","assertions":[{"name":"NightwatchAssertError","message":"Testing if element <#content > div > h3> is visible (59ms)","stackTrace":"","fullMsg":"Testing if element \u001b[33m<#content > div > h3>\u001b[39m is visible \u001b[90m(59ms)\u001b[39m","failure":false},{"name":"NightwatchAssertError","message":"Testing if element <#column-a> contains text 'B' (52ms)","stackTrace":"","fullMsg":"Testing if element \u001b[33m<#column-a>\u001b[39m contains text \u001b[33m'B'\u001b[39m \u001b[90m(52ms)\u001b[39m","failure":false},{"name":"NightwatchAssertError","message":"Testing if element <#column-b> contains text 'A' (60ms)","stackTrace":"","fullMsg":"Testing if element \u001b[33m<#column-b>\u001b[39m contains text \u001b[33m'A'\u001b[39m \u001b[90m(60ms)\u001b[39m","failure":false}],"commands":[],"passed":3,"errors":0,"failed":0,"skipped":0,"tests":3,"status":"pass","startTimestamp":"Fri, 30 Aug 2024 08:01:16 GMT","httpOutput":[],"steps":[],"stackTrace":"","testcases":{"DragDrop":{"time":"22.48","assertions":[{"name":"NightwatchAssertError","message":"Testing if element <#content > div > h3> is visible (59ms)","stackTrace":"","fullMsg":"Testing if element \u001b[33m<#content > div > h3>\u001b[39m is visible \u001b[90m(59ms)\u001b[39m","failure":false},{"name":"NightwatchAssertError","message":"Testing if element <#column-a> contains text 'B' (52ms)","stackTrace":"","fullMsg":"Testing if element \u001b[33m<#column-a>\u001b[39m contains text \u001b[33m'B'\u001b[39m \u001b[90m(52ms)\u001b[39m","failure":false},{"name":"NightwatchAssertError","message":"Testing if element <#column-b> contains text 'A' (60ms)","stackTrace":"","fullMsg":"Testing if element \u001b[33m<#column-b>\u001b[39m contains text \u001b[33m'A'\u001b[39m \u001b[90m(60ms)\u001b[39m","failure":false}],"tests":3,"commands":[],"passed":3,"errors":0,"failed":0,"skipped":0,"status":"pass","startTimestamp":"Fri, 30 Aug 2024 08:01:16 GMT","httpOutput":[],"steps":[],"stackTrace":"","timeMs":22477,"endTimestamp":"Fri, 30 Aug 2024 08:01:38 GMT"}},"timeMs":22477,"endTimestamp":"Fri, 30 Aug 2024 08:01:38 GMT"}},"completedSections":{"__global_beforeEach_hook":{"time":"0.000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1725004876163,"httpOutput":[["2024-08-30T08:01:15.591Z","  Request POST /session  ","{\n     capabilities: {\n       firstMatch: [ {} ],\n       alwaysMatch: {\n         browserName: \u001b[32m&#39;chrome&#39;\u001b[39m,\n         \u001b[32m&#39;goog:chromeOptions&#39;\u001b[39m: { w3c: \u001b[33mtrue\u001b[39m, args: [] }\n       }\n     }\n  }"],["2024-08-30T08:01:16.160Z","  Response 200 POST /session (573ms)","{\n     value: {\n       capabilities: {\n         acceptInsecureCerts: \u001b[33mfalse\u001b[39m,\n         browserName: \u001b[32m&#39;chrome&#39;\u001b[39m,\n         browserVersion: \u001b[32m&#39;128.0.6613.86&#39;\u001b[39m,\n         chrome: {\n           chromedriverVersion: \u001b[32m&#39;127.0.6533.99 (f31af5097d90ef5ae5bd7b8700199bc6189ba34d-refs/branch-heads/6533@{#1910})&#39;\u001b[39m,\n           userDataDir: \u001b[32m&#39;C:\\\\Users\\\\Dell\\\\AppData\\\\Local\\\\Temp\\\\scoped_dir23164_1879389421&#39;\u001b[39m\n         },\n         \u001b[32m&#39;fedcm:accounts&#39;\u001b[39m: \u001b[33mtrue\u001b[39m,\n         \u001b[32m&#39;goog:chromeOptions&#39;\u001b[39m: { debuggerAddress: \u001b[32m&#39;localhost:49937&#39;\u001b[39m },\n         networkConnectionEnabled: \u001b[33mfalse\u001b[39m,\n         pageLoadStrategy: \u001b[32m&#39;normal&#39;\u001b[39m,\n         platformName: \u001b[32m&#39;windows&#39;\u001b[39m,\n         proxy: {},\n         setWindowRect: \u001b[33mtrue\u001b[39m,\n         strictFileInteractability: \u001b[33mfalse\u001b[39m,\n         timeouts: { implicit: \u001b[33m0\u001b[39m, pageLoad: \u001b[33m300000\u001b[39m, script: \u001b[33m30000\u001b[39m },\n         unhandledPromptBehavior: \u001b[32m&#39;dismiss and notify&#39;\u001b[39m,\n         \u001b[32m&#39;webauthn:extension:credBlob&#39;\u001b[39m: \u001b[33mtrue\u001b[39m,\n         \u001b[32m&#39;webauthn:extension:largeBlob&#39;\u001b[39m: \u001b[33mtrue\u001b[39m,\n         \u001b[32m&#39;webauthn:extension:minPinLength&#39;\u001b[39m: \u001b[33mtrue\u001b[39m,\n         \u001b[32m&#39;webauthn:extension:prf&#39;\u001b[39m: \u001b[33mtrue\u001b[39m,\n         \u001b[32m&#39;webauthn:virtualAuthenticators&#39;\u001b[39m: \u001b[33mtrue\u001b[39m\n       },\n       sessionId: \u001b[32m&#39;135bd01a1dc0388f113168dad13e8aba&#39;\u001b[39m\n     }\n  }"]],"timeMs":0,"endTimestamp":1725004876163},"__before_hook":{"time":"0.000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1725004876163,"httpOutput":[],"timeMs":0,"endTimestamp":1725004876163},"DragDrop":{"time":"22.48","assertions":[],"commands":[{"name":"url","args":["\"https://the-internet.herokuapp.com/drag_and_drop\""],"startTime":1725004876173,"endTime":1725004886199,"elapsedTime":10026,"status":"pass","result":{"status":0}},{"name":"windowMaximize","args":[],"startTime":1725004886201,"endTime":1725004886266,"elapsedTime":65,"status":"pass","result":{"status":0}},{"name":"pause","args":["2000"],"startTime":1725004886267,"endTime":1725004888273,"elapsedTime":2006,"status":"pass"},{"name":"assert.visible","args":["\"#content > div > h3\""],"startTime":1725004888274,"endTime":1725004888352,"elapsedTime":78,"status":"pass","result":{"status":0}},{"name":"execute","args":["\"  (function(selectorDraggable, selectorDroppable) {\\n    var __extends = (this && this.__extends) || function (d, b) {\\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\\n    function __() { this.constructor = d; }\\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n};\\nvar dnd;\\n(function (dnd) {\\n    \\\"use strict\\\";\\n    function simulate(draggable, droppable) {\\n        var store = new DragDataStore();\\n        // For the dragstart event. New data can be added to the drag data store.\\n        store.mode = \\\"readwrite\\\";\\n        var dataTransfer = new DataTransfer(store);\\n        var dragstartEvent = createEventWithDataTransfer(\\\"dragstart\\\", dataTransfer);\\n        draggable.dispatchEvent(dragstartEvent);\\n        // For the drop event. The list of items representing dragged data can be\\n        // read, including the data. No new data can be added.\\n        store.mode = \\\"readonly\\\";\\n        var dragOverEvent = createEventWithDataTransfer(\\\"dragover\\\", dataTransfer);\\n        droppable.dispatchEvent(dragOverEvent);\\n        var dropEvent = createEventWithDataTransfer(\\\"drop\\\", dataTransfer);\\n        droppable.dispatchEvent(dropEvent);\\n        // For all other events. The formats and kinds in the drag data store list\\n        // of items representing dragged data can be enumerated, but the data itself\\n        // is unavailable and no new data can be added.\\n        store.mode = \\\"protected\\\";\\n        var dragendEvent = createEventWithDataTransfer(\\\"dragend\\\", dataTransfer);\\n        draggable.dispatchEvent(dragendEvent);\\n    }\\n    dnd.simulate = simulate;\\n    /**\\n     * Creates an event instance with a DataTransfer.\\n     */\\n    function createEventWithDataTransfer(type, dataTransfer) {\\n        var event = document.createEvent(\\\"CustomEvent\\\");\\n        event.initCustomEvent(type, true, true, null);\\n        event.dataTransfer = dataTransfer;\\n        return event;\\n    }\\n    /**\\n     * DataTransfer objects are used to expose the drag data store that underlies\\n     * a drag-and-drop operation.\\n     *\\n     * @see https://html.spec.whatwg.org/multipage/interaction.html#datatransferitem\\n     */\\n    var DataTransfer = (function () {\\n        function DataTransfer(store) {\\n            this.store = store;\\n            /**\\n             * @see DataTransfer#setData\\n             */\\n            this.typeTable = {};\\n            /**\\n             * Returns the kinds of operations that are to be allowed.\\n             *\\n             * Can be set (during the dragstart event), to change the allowed\\n             * operations.\\n             *\\n             * The possible values are \\\"none\\\", \\\"copy\\\", \\\"copyLink\\\", \\\"copyMove\\\", \\\"link\\\",\\n             * \\\"linkMove\\\", \\\"move\\\", \\\"all\\\", and \\\"uninitialized\\\",\\n             */\\n            this.effectAllowed = \\\"uninitialized\\\";\\n            /**\\n             * Returns an array listing the formats that were set in the dragstart\\n             * event. In addition, if any files are being dragged, then one of the types\\n             * will be the string \\\"Files\\\".\\n             */\\n            this.types = [];\\n            /**\\n             * Returns a FileList of the files being dragged, if any.\\n             */\\n            this.files = new FileList();\\n        }\\n        /**\\n         * Uses the given element to update the drag feedback, replacing any\\n         * previously specified feedback.\\n         */\\n        DataTransfer.prototype.setDragImage = function (element, x, y) {\\n            // Do nothing.\\n        };\\n        /**\\n         * Returns the specified data. If there is no such data, returns the empty\\n         * string.\\n         */\\n        DataTransfer.prototype.getData = function (format) {\\n            // If the DataTransfer object is no longer associated with a drag data\\n            // store, return the empty string and abort these steps.\\n            // If the drag data store's mode is in the protected mode, return the empty\\n            // string and abort these steps.\\n            if (this.store.mode === \\\"protected\\\") {\\n                return \\\"\\\";\\n            }\\n            // Let format be the first argument, converted to ASCII lowercase.\\n            format = format.toLowerCase();\\n            // Let convert-to-URL be false.\\n            var convertToUrl = false;\\n            if (format === \\\"text\\\") {\\n                // If format equals \\\"text\\\", change it to \\\"text/plain\\\".\\n                format = \\\"text/plain\\\";\\n            }\\n            else if (format === \\\"url\\\") {\\n                // If format equals \\\"url\\\", change it to \\\"text/uri-list\\\" and set\\n                // convert-to-URL to true.\\n                format = \\\"text/uri-list\\\";\\n                convertToUrl = true;\\n            }\\n            // If there is no item in the drag data store item list whose kind is Plain\\n            // Unicode string and whose type string is equal to format, return the empty\\n            // string and abort these steps.\\n            if (!(format in this.typeTable)) {\\n                return \\\"\\\";\\n            }\\n            // Let result be the data of the item in the drag data store item list whose\\n            // kind is Plain Unicode string and whose type string is equal to format.\\n            var result = this.typeTable[format];\\n            // If convert-to-URL is true, then parse result as appropriate for\\n            // text/uri-list data, and then set result to the first URL from the list,\\n            // if any, or the empty string otherwise. [RFC2483]\\n            if (convertToUrl) {\\n                result = parseTextUriList(result)[0] || \\\"\\\";\\n            }\\n            // Return result.\\n            return result;\\n        };\\n        /**\\n         * Adds the specified data.\\n         */\\n        DataTransfer.prototype.setData = function (format, data) {\\n            // If the DataTransfer object is no longer associated with a drag data\\n            // store, abort these steps. Nothing happens.\\n            if (!this.store) {\\n                return;\\n            }\\n            // If the drag data store's mode is not the read/write mode, abort these\\n            // steps. Nothing happens.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                return;\\n            }\\n            // Let format be the first argument, converted to ASCII lowercase.\\n            format = format.toLowerCase();\\n            // If format equals \\\"text\\\", change it to \\\"text/plain\\\".\\n            // If format equals \\\"url\\\", change it to \\\"text/uri-list\\\".\\n            if (format === \\\"text\\\") {\\n                format = \\\"text/plain\\\";\\n            }\\n            else if (format === \\\"url\\\") {\\n                format = \\\"text/uri-list\\\";\\n            }\\n            // Remove the item in the drag data store item list whose kind is Plain\\n            // Unicode string and whose type string is equal to format, if there is\\n            // one. Add an item to the drag data store item list whose kind is Plain\\n            // Unicode string, whose type string is equal to format, and whose data\\n            // is the string given by the method's second argument.\\n            this.typeTable[format] = data;\\n            this.types = Object.keys(this.typeTable);\\n        };\\n        /**\\n         * Removes the data of the specified formats. Removes all data if the\\n         * argument is omitted.\\n         */\\n        DataTransfer.prototype.clearData = function (format) {\\n            var _this = this;\\n            // If the DataTransfer object is no longer associated with a drag data\\n            // store, abort these steps. Nothing happens.\\n            if (!this.store) {\\n                return;\\n            }\\n            // If the drag data store's mode is not the read/write mode, abort these\\n            // steps. Nothing happens.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                return;\\n            }\\n            // If the method was called with no arguments, remove each item in the\\n            // drag data store item list whose kind is Plain Unicode string, and abort\\n            // these steps.\\n            if (typeof format === \\\"undefined\\\") {\\n                // Note: The clearData() method does not affect whether any files were\\n                // included in the drag, so the types attribute's list might still not\\n                // be empty after calling clearData() (it would still contain the\\n                // \\\"Files\\\" string if any files were included in the drag).\\n                this.types.filter(function (type) { return type !== \\\"Files\\\"; })\\n                    .forEach(function (type) { return _this.clearData(type); });\\n                return;\\n            }\\n            // Let format be the first argument, converted to ASCII lowercase.\\n            format = format.toLowerCase();\\n            // If format equals \\\"text\\\", change it to \\\"text/plain\\\".\\n            // If format equals \\\"url\\\", change it to \\\"text/uri-list\\\".\\n            if (format === \\\"text\\\") {\\n                format = \\\"text/plain\\\";\\n            }\\n            else if (format === \\\"url\\\") {\\n                format = \\\"text/uri-list\\\";\\n            }\\n            // Remove the item in the drag data store item list whose kind is Plain\\n            // Unicode string and whose type string is equal to format, if there is\\n            // one.\\n            delete this.typeTable[format];\\n            this.types = Object.keys(this.typeTable);\\n        };\\n        return DataTransfer;\\n    }());\\n    dnd.DataTransfer = DataTransfer;\\n    /**\\n     * @see https://w3c.github.io/FileAPI/#filelist-section\\n     */\\n    var FileList = (function () {\\n        function FileList() {\\n            this.length = 0;\\n        }\\n        // NOTE: This implementation can represent only empty FileList.\\n        FileList.prototype.item = function (index) {\\n            return null;\\n        };\\n        return FileList;\\n    }());\\n    dnd.FileList = FileList;\\n    /**\\n     * The data that underlies a drag-and-drop operation, known as the drag data\\n     * store, consists of the following information:\\n     *\\n     */\\n    var DragDataStore = (function () {\\n        function DragDataStore() {\\n        }\\n        return DragDataStore;\\n    }());\\n    /**\\n     * Each DataTransfer object is associated with a DataTransferItemList object.\\n     * @see https://html.spec.whatwg.org/multipage/interaction.html#datatransferitemlist\\n     */\\n    var DataTransferItemList = (function () {\\n        function DataTransferItemList(store) {\\n            this.store = store;\\n            /**\\n             * Each DataTransfer object is associated with a DataTransferItemList\\n             * object.\\n             */\\n            this.items = [];\\n            /**\\n             * @see DataTransferItemList#add\\n             */\\n            this.typeTable = {};\\n            /**\\n             * Returns the number of items in the drag data store.\\n             */\\n            this.length = 0;\\n        }\\n        /**\\n         * Removes the indexth entry in the drag data store.\\n         */\\n        DataTransferItemList.prototype.remove = function (idx) {\\n            // If the DataTransferItemList object is not in the read/write mode, throw\\n            // an InvalidStateError exception and abort these steps.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                throw InvalidStateError.createByDefaultMessage();\\n            }\\n            // Remove the ith item from the drag data store.\\n            var removed = this.items.splice(idx, 1)[0];\\n            this.syncInternal();\\n            if (removed) {\\n                delete this.typeTable[removed.type];\\n            }\\n        };\\n        /**\\n         * Removes all the entries in the drag data store.\\n         */\\n        DataTransferItemList.prototype.clear = function () {\\n            // If the DataTransferItemList object is not in the read/write mode, throw\\n            // an InvalidStateError exception and abort these steps.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                throw InvalidStateError.createByDefaultMessage();\\n            }\\n            // Remove the ith item from the drag data store.\\n            this.items = [];\\n            this.syncInternal();\\n        };\\n        DataTransferItemList.prototype.add = function (data, type) {\\n            // If the DataTransferItemList object is not in the read/write mode,\\n            // return null and abort these steps.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                return null;\\n            }\\n            // Jump to the appropriate set of steps from the following list:\\n            //   A: If the first argument to the method is a string\\n            //   B: If the first argument to the method is a File\\n            if (typeof data === \\\"string\\\") {\\n                // If there is already an item in the drag data store item list whose\\n                // kind is Plain Unicode string and whose type string is equal to the\\n                // value of the method's second argument, converted to ASCII lowercase,\\n                // then throw a NotSupportedError exception and abort these steps.\\n                var typeLowerCase = type.toLowerCase();\\n                if (this.typeTable[typeLowerCase]) {\\n                    throw NotSupportedError.createByDefaultMessage();\\n                }\\n                // Otherwise, add an item to the drag data store item list whose kind is\\n                // Plain Unicode string, whose type string is equal to the value of the\\n                // method's second argument, converted to ASCII lowercase, and whose\\n                // data is the string given by the method's first argument.\\n                var stringItem = DataTransferItem.createForString(data, typeLowerCase, this.store);\\n                this.items.push(stringItem);\\n                this.typeTable[typeLowerCase] = true;\\n            }\\n            else {\\n                // Add an item to the drag data store item list whose kind is File,\\n                // whose type string is the type of the File, converted to ASCII\\n                // lowercase, and whose data is the same as the File's data.\\n                var fileItem = DataTransferItem.createForFile(data, this.store);\\n                this.items.push(fileItem);\\n            }\\n            this.syncInternal();\\n        };\\n        DataTransferItemList.prototype.syncInternal = function () {\\n            var _this = this;\\n            for (var i = 0; i < this.length; i++) {\\n                delete this[i];\\n            }\\n            this.items.forEach(function (item, j) {\\n                _this[j] = item;\\n            });\\n            this.length = this.items.length;\\n        };\\n        return DataTransferItemList;\\n    }());\\n    dnd.DataTransferItemList = DataTransferItemList;\\n    /**\\n     * While the DataTransferItem object's DataTransfer object is associated with\\n     * a drag data store and that drag data store's drag data store item list\\n     * still contains the item that the DataTransferItem object represents, the\\n     * DataTransferItem object's mode is the same as the drag data store mode.\\n     * When the DataTransferItem object's DataTransfer object is not associated\\n     * with a drag data store, or if the item that the DataTransferItem object\\n     * represents has been removed from the relevant drag data store item list,\\n     * the DataTransferItem object's mode is the disabled mode. The drag data\\n     * store referenced in this section (which is used only when the\\n     * DataTransferItem object is not in the disabled mode) is the drag data store\\n     * with which the DataTransferItem object's DataTransfer object is associated.\\n     *\\n     * @see https://html.spec.whatwg.org/multipage/interaction.html#datatransferitem\\n     */\\n    var DataTransferItem = (function () {\\n        function DataTransferItem(data, kind, typeLowerCase, store) {\\n            this.data = data;\\n            this.store = store;\\n            this.type = typeLowerCase;\\n            this.kind = kind;\\n        }\\n        DataTransferItem.prototype.getAsString = function (callback) {\\n            var _this = this;\\n            // If the callback is null, abort these steps.\\n            if (callback) {\\n                return;\\n            }\\n            // If the DataTransferItem object is not in the read/write mode or the\\n            // read-only mode, abort these steps. The callback is never invoked.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                return;\\n            }\\n            // If the drag data item kind is not Plain Unicode string, abort these\\n            // steps. The callback is never invoked.\\n            if (this.kind !== \\\"string\\\") {\\n                return;\\n            }\\n            // Otherwise, queue a task to invoke callback, passing the actual data of\\n            // the item represented by the DataTransferItem object as the argument.\\n            setTimeout(function () {\\n                callback(_this.data);\\n            }, 0);\\n        };\\n        DataTransferItem.prototype.getAsFile = function () {\\n            // If the DataTransferItem object is not in the read/write mode or the\\n            // read-only mode, return null and abort these steps.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                return null;\\n            }\\n            // If the drag data item kind is not File, then return null and abort\\n            // these steps.\\n            if (this.kind !== \\\"string\\\") {\\n                return null;\\n            }\\n            // Return a new File object representing the actual data of the item\\n            // represented by the DataTransferItem object.\\n            return this.data;\\n        };\\n        DataTransferItem.createForString = function (data, type, store) {\\n            return new DataTransferItem(data, \\\"string\\\", type, store);\\n        };\\n        DataTransferItem.createForFile = function (data, store) {\\n            return new DataTransferItem(data, \\\"file\\\", null, store);\\n        };\\n        return DataTransferItem;\\n    }());\\n    /**\\n     * @see https://heycam.github.io/webidl/#invalidstateerror\\n     */\\n    var InvalidStateError = (function (_super) {\\n        __extends(InvalidStateError, _super);\\n        function InvalidStateError(message) {\\n            _super.call(this, message);\\n            this.message = message;\\n            this.name = \\\"InvalidStateError\\\";\\n        }\\n        InvalidStateError.createByDefaultMessage = function () {\\n            return new InvalidStateError(\\\"The object is in an invalid state\\\");\\n        };\\n        return InvalidStateError;\\n    }(Error));\\n    /**\\n     * @see https://heycam.github.io/webidl/#notsupportederror\\n     */\\n    var NotSupportedError = (function (_super) {\\n        __extends(NotSupportedError, _super);\\n        function NotSupportedError(message) {\\n            _super.call(this, message);\\n            this.message = message;\\n            this.name = \\\"NotSupportedError\\\";\\n        }\\n        NotSupportedError.createByDefaultMessage = function () {\\n            return new InvalidStateError(\\\"The operation is not supported\\\");\\n        };\\n        return NotSupportedError;\\n    }(Error));\\n    /**\\n     * Return an array of URL strings.\\n     * @see http://tools.ietf.org/html/rfc2483\\n     */\\n    function parseTextUriList(textUriList) {\\n        // As for all text/(*) formats, lines are terminated with a CRLF pair.\\n        textUriList = textUriList.replace(/\\\\r\\\\n$/, \\\"\\\");\\n        if (textUriList === \\\"\\\") {\\n            return [];\\n        }\\n        return textUriList.split(/\\\\r\\\\n/).filter(function (line) {\\n            // Any lines beginning with the '#' character are comment lines\\n            // and are ignored during processing.\\n            // The remaining non-comment lines shall be URIs (URNs or URLs),\\n            // encoded according to the URL or URN specifications (RFC2141,\\n            // RFC1738 and RFC2396). Each URI shall appear on one and only one\\n            // line. Very long URIs are not broken in the text/uri-list format.\\n            // Content-transfer-encodings may be used to enforce line length\\n            // limitations.\\n            return line[0] !== \\\"#\\\";\\n        });\\n    }\\n    dnd.parseTextUriList = parseTextUriList;\\n    ;\\n})(dnd || (dnd = {}));\\n;\\n    \\n    var draggable = document.querySelector(selectorDraggable);\\n    var droppable = document.querySelector(selectorDroppable);\\n\\n    dnd.simulate(draggable, droppable);\\n  })(arguments[0], arguments[1]);\"","[\"#column-a\",\"#column-b\"]"],"startTime":1725004888352,"endTime":1725004888370,"elapsedTime":18,"status":"pass","result":{"status":0}},{"name":"assert.containsText","args":["\"#column-a\"","\"B\""],"startTime":1725004888371,"endTime":1725004888435,"elapsedTime":64,"status":"pass","result":{"status":0}},{"name":"assert.containsText","args":["\"#column-b\"","\"A\""],"startTime":1725004888435,"endTime":1725004888497,"elapsedTime":62,"status":"pass","result":{"status":0}},{"name":"pause","args":["5000"],"startTime":1725004888498,"endTime":1725004893504,"elapsedTime":5006,"status":"pass"},{"name":"saveScreenshot","args":["\"./test/screenshots/dragged.png\""],"startTime":1725004893504,"endTime":1725004893632,"elapsedTime":128,"status":"pass","result":{"status":0}},{"name":"pause","args":["5000"],"startTime":1725004893632,"endTime":1725004898639,"elapsedTime":5007,"status":"pass"}],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1725004876164,"httpOutput":[["2024-08-30T08:01:16.176Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/url  ","{ url: \u001b[32m&#39;https://the-internet.herokuapp.com/drag_and_drop&#39;\u001b[39m }"],["2024-08-30T08:01:26.195Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/url (10018ms)","{ value: \u001b[1mnull\u001b[22m }"],["2024-08-30T08:01:26.204Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/window/maximize  ","{ windowHandle: \u001b[32m&#39;current&#39;\u001b[39m }"],["2024-08-30T08:01:26.265Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/window/maximize (62ms)","{ value: { height: \u001b[33m768\u001b[39m, width: \u001b[33m1296\u001b[39m, x: \u001b[33m-8\u001b[39m, y: \u001b[33m-8\u001b[39m } }"],["2024-08-30T08:01:28.294Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: \u001b[32m&#39;css selector&#39;\u001b[39m, value: \u001b[32m&#39;#content &gt; div &gt; h3&#39;\u001b[39m }"],["2024-08-30T08:01:28.316Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (22ms)","{\n     value: [\n       {\n         \u001b[32m&#39;element-6066-11e4-a52e-4f735466cecf&#39;\u001b[39m: \u001b[32m&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11&#39;\u001b[39m\n       }\n     ]\n  }"],["2024-08-30T08:01:28.320Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync  ","{\n     script: \u001b[32m&#39;/* isDisplayed */return (function(){return (function(){var g=this||self;\\n&#39;\u001b[39m +\n       \u001b[32m&#39;function aa(a){var b=typeof a;if(&quot;object&quot;==b)if(a){if(a instanceof Array)return&quot;array&quot;;if(a instanceof Object)return b;var c=Ob... (16987 characters)&#39;\u001b[39m,\n     args: [\n       {\n         \u001b[32m&#39;element-6066-11e4-a52e-4f735466cecf&#39;\u001b[39m: \u001b[32m&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11&#39;\u001b[39m,\n         ELEMENT: \u001b[32m&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11&#39;\u001b[39m\n       }\n     ]\n  }"],["2024-08-30T08:01:28.333Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync (14ms)","{ value: \u001b[33mtrue\u001b[39m }"],["2024-08-30T08:01:28.355Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync  ","{\n     script: \u001b[32m&#39;  (function(selectorDraggable, selectorDroppable) {\\n&#39;\u001b[39m +\n       \u001b[32m&#39;    var __extends = (this &amp;&amp; this.__extends) || function (d, b) {\\n&#39;\u001b[39m +\n       \u001b[32m&#39;    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\\n&#39;\u001b[39m +\n       \u001b[32m&#39;    function __() { thi... (20178 characters)&#39;\u001b[39m,\n     args: [ \u001b[32m&#39;#column-a&#39;\u001b[39m, \u001b[32m&#39;#column-b&#39;\u001b[39m ]\n  }"],["2024-08-30T08:01:28.369Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync (15ms)","{ value: \u001b[1mnull\u001b[22m }"],["2024-08-30T08:01:28.381Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: \u001b[32m&#39;css selector&#39;\u001b[39m, value: \u001b[32m&#39;#column-a&#39;\u001b[39m }"],["2024-08-30T08:01:28.400Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (20ms)","{\n     value: [\n       {\n         \u001b[32m&#39;element-6066-11e4-a52e-4f735466cecf&#39;\u001b[39m: \u001b[32m&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6&#39;\u001b[39m\n       }\n     ]\n  }"],["2024-08-30T08:01:28.402Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6/text  ","\u001b[32m&#39;&#39;\u001b[39m"],["2024-08-30T08:01:28.425Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6/text (22ms)","{ value: \u001b[32m&#39;B&#39;\u001b[39m }"],["2024-08-30T08:01:28.454Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: \u001b[32m&#39;css selector&#39;\u001b[39m, value: \u001b[32m&#39;#column-b&#39;\u001b[39m }"],["2024-08-30T08:01:28.478Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (24ms)","{\n     value: [\n       {\n         \u001b[32m&#39;element-6066-11e4-a52e-4f735466cecf&#39;\u001b[39m: \u001b[32m&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7&#39;\u001b[39m\n       }\n     ]\n  }"],["2024-08-30T08:01:28.479Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7/text  ","\u001b[32m&#39;&#39;\u001b[39m"],["2024-08-30T08:01:28.496Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7/text (17ms)","{ value: \u001b[32m&#39;A&#39;\u001b[39m }"],["2024-08-30T08:01:33.521Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/screenshot  ","\u001b[32m&#39;&#39;\u001b[39m"],["2024-08-30T08:01:33.628Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/screenshot (101ms)","{\n     value: \u001b[32m&#39;iVBORw0KGgoAAAANSUhEUgAAB4AAAAOYCAIAAAC7Cnl0AAAAAXNSR0IArs4c6QAAIABJREFUeJzs3XlwXOWdL/znbH26Ty9SS2pt...&#39;\u001b[39m,\n     suppressBase64Data: \u001b[33mtrue\u001b[39m\n  }"]],"beforeEach":{"time":"0.001000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1725004876164,"httpOutput":[],"endTimestamp":1725004876165,"timeMs":1},"testcase":{"time":"22.48","assertions":[],"commands":[{"name":"url","args":["\"https://the-internet.herokuapp.com/drag_and_drop\""],"startTime":1725004876173,"endTime":1725004886199,"elapsedTime":10026,"status":"pass","result":{"status":0}},{"name":"windowMaximize","args":[],"startTime":1725004886201,"endTime":1725004886266,"elapsedTime":65,"status":"pass","result":{"status":0}},{"name":"pause","args":["2000"],"startTime":1725004886267,"endTime":1725004888273,"elapsedTime":2006,"status":"pass"},{"name":"assert.visible","args":["\"#content > div > h3\""],"startTime":1725004888274,"endTime":1725004888352,"elapsedTime":78,"status":"pass","result":{"status":0}},{"name":"execute","args":["\"  (function(selectorDraggable, selectorDroppable) {\\n    var __extends = (this && this.__extends) || function (d, b) {\\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\\n    function __() { this.constructor = d; }\\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n};\\nvar dnd;\\n(function (dnd) {\\n    \\\"use strict\\\";\\n    function simulate(draggable, droppable) {\\n        var store = new DragDataStore();\\n        // For the dragstart event. New data can be added to the drag data store.\\n        store.mode = \\\"readwrite\\\";\\n        var dataTransfer = new DataTransfer(store);\\n        var dragstartEvent = createEventWithDataTransfer(\\\"dragstart\\\", dataTransfer);\\n        draggable.dispatchEvent(dragstartEvent);\\n        // For the drop event. The list of items representing dragged data can be\\n        // read, including the data. No new data can be added.\\n        store.mode = \\\"readonly\\\";\\n        var dragOverEvent = createEventWithDataTransfer(\\\"dragover\\\", dataTransfer);\\n        droppable.dispatchEvent(dragOverEvent);\\n        var dropEvent = createEventWithDataTransfer(\\\"drop\\\", dataTransfer);\\n        droppable.dispatchEvent(dropEvent);\\n        // For all other events. The formats and kinds in the drag data store list\\n        // of items representing dragged data can be enumerated, but the data itself\\n        // is unavailable and no new data can be added.\\n        store.mode = \\\"protected\\\";\\n        var dragendEvent = createEventWithDataTransfer(\\\"dragend\\\", dataTransfer);\\n        draggable.dispatchEvent(dragendEvent);\\n    }\\n    dnd.simulate = simulate;\\n    /**\\n     * Creates an event instance with a DataTransfer.\\n     */\\n    function createEventWithDataTransfer(type, dataTransfer) {\\n        var event = document.createEvent(\\\"CustomEvent\\\");\\n        event.initCustomEvent(type, true, true, null);\\n        event.dataTransfer = dataTransfer;\\n        return event;\\n    }\\n    /**\\n     * DataTransfer objects are used to expose the drag data store that underlies\\n     * a drag-and-drop operation.\\n     *\\n     * @see https://html.spec.whatwg.org/multipage/interaction.html#datatransferitem\\n     */\\n    var DataTransfer = (function () {\\n        function DataTransfer(store) {\\n            this.store = store;\\n            /**\\n             * @see DataTransfer#setData\\n             */\\n            this.typeTable = {};\\n            /**\\n             * Returns the kinds of operations that are to be allowed.\\n             *\\n             * Can be set (during the dragstart event), to change the allowed\\n             * operations.\\n             *\\n             * The possible values are \\\"none\\\", \\\"copy\\\", \\\"copyLink\\\", \\\"copyMove\\\", \\\"link\\\",\\n             * \\\"linkMove\\\", \\\"move\\\", \\\"all\\\", and \\\"uninitialized\\\",\\n             */\\n            this.effectAllowed = \\\"uninitialized\\\";\\n            /**\\n             * Returns an array listing the formats that were set in the dragstart\\n             * event. In addition, if any files are being dragged, then one of the types\\n             * will be the string \\\"Files\\\".\\n             */\\n            this.types = [];\\n            /**\\n             * Returns a FileList of the files being dragged, if any.\\n             */\\n            this.files = new FileList();\\n        }\\n        /**\\n         * Uses the given element to update the drag feedback, replacing any\\n         * previously specified feedback.\\n         */\\n        DataTransfer.prototype.setDragImage = function (element, x, y) {\\n            // Do nothing.\\n        };\\n        /**\\n         * Returns the specified data. If there is no such data, returns the empty\\n         * string.\\n         */\\n        DataTransfer.prototype.getData = function (format) {\\n            // If the DataTransfer object is no longer associated with a drag data\\n            // store, return the empty string and abort these steps.\\n            // If the drag data store's mode is in the protected mode, return the empty\\n            // string and abort these steps.\\n            if (this.store.mode === \\\"protected\\\") {\\n                return \\\"\\\";\\n            }\\n            // Let format be the first argument, converted to ASCII lowercase.\\n            format = format.toLowerCase();\\n            // Let convert-to-URL be false.\\n            var convertToUrl = false;\\n            if (format === \\\"text\\\") {\\n                // If format equals \\\"text\\\", change it to \\\"text/plain\\\".\\n                format = \\\"text/plain\\\";\\n            }\\n            else if (format === \\\"url\\\") {\\n                // If format equals \\\"url\\\", change it to \\\"text/uri-list\\\" and set\\n                // convert-to-URL to true.\\n                format = \\\"text/uri-list\\\";\\n                convertToUrl = true;\\n            }\\n            // If there is no item in the drag data store item list whose kind is Plain\\n            // Unicode string and whose type string is equal to format, return the empty\\n            // string and abort these steps.\\n            if (!(format in this.typeTable)) {\\n                return \\\"\\\";\\n            }\\n            // Let result be the data of the item in the drag data store item list whose\\n            // kind is Plain Unicode string and whose type string is equal to format.\\n            var result = this.typeTable[format];\\n            // If convert-to-URL is true, then parse result as appropriate for\\n            // text/uri-list data, and then set result to the first URL from the list,\\n            // if any, or the empty string otherwise. [RFC2483]\\n            if (convertToUrl) {\\n                result = parseTextUriList(result)[0] || \\\"\\\";\\n            }\\n            // Return result.\\n            return result;\\n        };\\n        /**\\n         * Adds the specified data.\\n         */\\n        DataTransfer.prototype.setData = function (format, data) {\\n            // If the DataTransfer object is no longer associated with a drag data\\n            // store, abort these steps. Nothing happens.\\n            if (!this.store) {\\n                return;\\n            }\\n            // If the drag data store's mode is not the read/write mode, abort these\\n            // steps. Nothing happens.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                return;\\n            }\\n            // Let format be the first argument, converted to ASCII lowercase.\\n            format = format.toLowerCase();\\n            // If format equals \\\"text\\\", change it to \\\"text/plain\\\".\\n            // If format equals \\\"url\\\", change it to \\\"text/uri-list\\\".\\n            if (format === \\\"text\\\") {\\n                format = \\\"text/plain\\\";\\n            }\\n            else if (format === \\\"url\\\") {\\n                format = \\\"text/uri-list\\\";\\n            }\\n            // Remove the item in the drag data store item list whose kind is Plain\\n            // Unicode string and whose type string is equal to format, if there is\\n            // one. Add an item to the drag data store item list whose kind is Plain\\n            // Unicode string, whose type string is equal to format, and whose data\\n            // is the string given by the method's second argument.\\n            this.typeTable[format] = data;\\n            this.types = Object.keys(this.typeTable);\\n        };\\n        /**\\n         * Removes the data of the specified formats. Removes all data if the\\n         * argument is omitted.\\n         */\\n        DataTransfer.prototype.clearData = function (format) {\\n            var _this = this;\\n            // If the DataTransfer object is no longer associated with a drag data\\n            // store, abort these steps. Nothing happens.\\n            if (!this.store) {\\n                return;\\n            }\\n            // If the drag data store's mode is not the read/write mode, abort these\\n            // steps. Nothing happens.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                return;\\n            }\\n            // If the method was called with no arguments, remove each item in the\\n            // drag data store item list whose kind is Plain Unicode string, and abort\\n            // these steps.\\n            if (typeof format === \\\"undefined\\\") {\\n                // Note: The clearData() method does not affect whether any files were\\n                // included in the drag, so the types attribute's list might still not\\n                // be empty after calling clearData() (it would still contain the\\n                // \\\"Files\\\" string if any files were included in the drag).\\n                this.types.filter(function (type) { return type !== \\\"Files\\\"; })\\n                    .forEach(function (type) { return _this.clearData(type); });\\n                return;\\n            }\\n            // Let format be the first argument, converted to ASCII lowercase.\\n            format = format.toLowerCase();\\n            // If format equals \\\"text\\\", change it to \\\"text/plain\\\".\\n            // If format equals \\\"url\\\", change it to \\\"text/uri-list\\\".\\n            if (format === \\\"text\\\") {\\n                format = \\\"text/plain\\\";\\n            }\\n            else if (format === \\\"url\\\") {\\n                format = \\\"text/uri-list\\\";\\n            }\\n            // Remove the item in the drag data store item list whose kind is Plain\\n            // Unicode string and whose type string is equal to format, if there is\\n            // one.\\n            delete this.typeTable[format];\\n            this.types = Object.keys(this.typeTable);\\n        };\\n        return DataTransfer;\\n    }());\\n    dnd.DataTransfer = DataTransfer;\\n    /**\\n     * @see https://w3c.github.io/FileAPI/#filelist-section\\n     */\\n    var FileList = (function () {\\n        function FileList() {\\n            this.length = 0;\\n        }\\n        // NOTE: This implementation can represent only empty FileList.\\n        FileList.prototype.item = function (index) {\\n            return null;\\n        };\\n        return FileList;\\n    }());\\n    dnd.FileList = FileList;\\n    /**\\n     * The data that underlies a drag-and-drop operation, known as the drag data\\n     * store, consists of the following information:\\n     *\\n     */\\n    var DragDataStore = (function () {\\n        function DragDataStore() {\\n        }\\n        return DragDataStore;\\n    }());\\n    /**\\n     * Each DataTransfer object is associated with a DataTransferItemList object.\\n     * @see https://html.spec.whatwg.org/multipage/interaction.html#datatransferitemlist\\n     */\\n    var DataTransferItemList = (function () {\\n        function DataTransferItemList(store) {\\n            this.store = store;\\n            /**\\n             * Each DataTransfer object is associated with a DataTransferItemList\\n             * object.\\n             */\\n            this.items = [];\\n            /**\\n             * @see DataTransferItemList#add\\n             */\\n            this.typeTable = {};\\n            /**\\n             * Returns the number of items in the drag data store.\\n             */\\n            this.length = 0;\\n        }\\n        /**\\n         * Removes the indexth entry in the drag data store.\\n         */\\n        DataTransferItemList.prototype.remove = function (idx) {\\n            // If the DataTransferItemList object is not in the read/write mode, throw\\n            // an InvalidStateError exception and abort these steps.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                throw InvalidStateError.createByDefaultMessage();\\n            }\\n            // Remove the ith item from the drag data store.\\n            var removed = this.items.splice(idx, 1)[0];\\n            this.syncInternal();\\n            if (removed) {\\n                delete this.typeTable[removed.type];\\n            }\\n        };\\n        /**\\n         * Removes all the entries in the drag data store.\\n         */\\n        DataTransferItemList.prototype.clear = function () {\\n            // If the DataTransferItemList object is not in the read/write mode, throw\\n            // an InvalidStateError exception and abort these steps.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                throw InvalidStateError.createByDefaultMessage();\\n            }\\n            // Remove the ith item from the drag data store.\\n            this.items = [];\\n            this.syncInternal();\\n        };\\n        DataTransferItemList.prototype.add = function (data, type) {\\n            // If the DataTransferItemList object is not in the read/write mode,\\n            // return null and abort these steps.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                return null;\\n            }\\n            // Jump to the appropriate set of steps from the following list:\\n            //   A: If the first argument to the method is a string\\n            //   B: If the first argument to the method is a File\\n            if (typeof data === \\\"string\\\") {\\n                // If there is already an item in the drag data store item list whose\\n                // kind is Plain Unicode string and whose type string is equal to the\\n                // value of the method's second argument, converted to ASCII lowercase,\\n                // then throw a NotSupportedError exception and abort these steps.\\n                var typeLowerCase = type.toLowerCase();\\n                if (this.typeTable[typeLowerCase]) {\\n                    throw NotSupportedError.createByDefaultMessage();\\n                }\\n                // Otherwise, add an item to the drag data store item list whose kind is\\n                // Plain Unicode string, whose type string is equal to the value of the\\n                // method's second argument, converted to ASCII lowercase, and whose\\n                // data is the string given by the method's first argument.\\n                var stringItem = DataTransferItem.createForString(data, typeLowerCase, this.store);\\n                this.items.push(stringItem);\\n                this.typeTable[typeLowerCase] = true;\\n            }\\n            else {\\n                // Add an item to the drag data store item list whose kind is File,\\n                // whose type string is the type of the File, converted to ASCII\\n                // lowercase, and whose data is the same as the File's data.\\n                var fileItem = DataTransferItem.createForFile(data, this.store);\\n                this.items.push(fileItem);\\n            }\\n            this.syncInternal();\\n        };\\n        DataTransferItemList.prototype.syncInternal = function () {\\n            var _this = this;\\n            for (var i = 0; i < this.length; i++) {\\n                delete this[i];\\n            }\\n            this.items.forEach(function (item, j) {\\n                _this[j] = item;\\n            });\\n            this.length = this.items.length;\\n        };\\n        return DataTransferItemList;\\n    }());\\n    dnd.DataTransferItemList = DataTransferItemList;\\n    /**\\n     * While the DataTransferItem object's DataTransfer object is associated with\\n     * a drag data store and that drag data store's drag data store item list\\n     * still contains the item that the DataTransferItem object represents, the\\n     * DataTransferItem object's mode is the same as the drag data store mode.\\n     * When the DataTransferItem object's DataTransfer object is not associated\\n     * with a drag data store, or if the item that the DataTransferItem object\\n     * represents has been removed from the relevant drag data store item list,\\n     * the DataTransferItem object's mode is the disabled mode. The drag data\\n     * store referenced in this section (which is used only when the\\n     * DataTransferItem object is not in the disabled mode) is the drag data store\\n     * with which the DataTransferItem object's DataTransfer object is associated.\\n     *\\n     * @see https://html.spec.whatwg.org/multipage/interaction.html#datatransferitem\\n     */\\n    var DataTransferItem = (function () {\\n        function DataTransferItem(data, kind, typeLowerCase, store) {\\n            this.data = data;\\n            this.store = store;\\n            this.type = typeLowerCase;\\n            this.kind = kind;\\n        }\\n        DataTransferItem.prototype.getAsString = function (callback) {\\n            var _this = this;\\n            // If the callback is null, abort these steps.\\n            if (callback) {\\n                return;\\n            }\\n            // If the DataTransferItem object is not in the read/write mode or the\\n            // read-only mode, abort these steps. The callback is never invoked.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                return;\\n            }\\n            // If the drag data item kind is not Plain Unicode string, abort these\\n            // steps. The callback is never invoked.\\n            if (this.kind !== \\\"string\\\") {\\n                return;\\n            }\\n            // Otherwise, queue a task to invoke callback, passing the actual data of\\n            // the item represented by the DataTransferItem object as the argument.\\n            setTimeout(function () {\\n                callback(_this.data);\\n            }, 0);\\n        };\\n        DataTransferItem.prototype.getAsFile = function () {\\n            // If the DataTransferItem object is not in the read/write mode or the\\n            // read-only mode, return null and abort these steps.\\n            if (this.store.mode !== \\\"readwrite\\\") {\\n                return null;\\n            }\\n            // If the drag data item kind is not File, then return null and abort\\n            // these steps.\\n            if (this.kind !== \\\"string\\\") {\\n                return null;\\n            }\\n            // Return a new File object representing the actual data of the item\\n            // represented by the DataTransferItem object.\\n            return this.data;\\n        };\\n        DataTransferItem.createForString = function (data, type, store) {\\n            return new DataTransferItem(data, \\\"string\\\", type, store);\\n        };\\n        DataTransferItem.createForFile = function (data, store) {\\n            return new DataTransferItem(data, \\\"file\\\", null, store);\\n        };\\n        return DataTransferItem;\\n    }());\\n    /**\\n     * @see https://heycam.github.io/webidl/#invalidstateerror\\n     */\\n    var InvalidStateError = (function (_super) {\\n        __extends(InvalidStateError, _super);\\n        function InvalidStateError(message) {\\n            _super.call(this, message);\\n            this.message = message;\\n            this.name = \\\"InvalidStateError\\\";\\n        }\\n        InvalidStateError.createByDefaultMessage = function () {\\n            return new InvalidStateError(\\\"The object is in an invalid state\\\");\\n        };\\n        return InvalidStateError;\\n    }(Error));\\n    /**\\n     * @see https://heycam.github.io/webidl/#notsupportederror\\n     */\\n    var NotSupportedError = (function (_super) {\\n        __extends(NotSupportedError, _super);\\n        function NotSupportedError(message) {\\n            _super.call(this, message);\\n            this.message = message;\\n            this.name = \\\"NotSupportedError\\\";\\n        }\\n        NotSupportedError.createByDefaultMessage = function () {\\n            return new InvalidStateError(\\\"The operation is not supported\\\");\\n        };\\n        return NotSupportedError;\\n    }(Error));\\n    /**\\n     * Return an array of URL strings.\\n     * @see http://tools.ietf.org/html/rfc2483\\n     */\\n    function parseTextUriList(textUriList) {\\n        // As for all text/(*) formats, lines are terminated with a CRLF pair.\\n        textUriList = textUriList.replace(/\\\\r\\\\n$/, \\\"\\\");\\n        if (textUriList === \\\"\\\") {\\n            return [];\\n        }\\n        return textUriList.split(/\\\\r\\\\n/).filter(function (line) {\\n            // Any lines beginning with the '#' character are comment lines\\n            // and are ignored during processing.\\n            // The remaining non-comment lines shall be URIs (URNs or URLs),\\n            // encoded according to the URL or URN specifications (RFC2141,\\n            // RFC1738 and RFC2396). Each URI shall appear on one and only one\\n            // line. Very long URIs are not broken in the text/uri-list format.\\n            // Content-transfer-encodings may be used to enforce line length\\n            // limitations.\\n            return line[0] !== \\\"#\\\";\\n        });\\n    }\\n    dnd.parseTextUriList = parseTextUriList;\\n    ;\\n})(dnd || (dnd = {}));\\n;\\n    \\n    var draggable = document.querySelector(selectorDraggable);\\n    var droppable = document.querySelector(selectorDroppable);\\n\\n    dnd.simulate(draggable, droppable);\\n  })(arguments[0], arguments[1]);\"","[\"#column-a\",\"#column-b\"]"],"startTime":1725004888352,"endTime":1725004888370,"elapsedTime":18,"status":"pass","result":{"status":0}},{"name":"assert.containsText","args":["\"#column-a\"","\"B\""],"startTime":1725004888371,"endTime":1725004888435,"elapsedTime":64,"status":"pass","result":{"status":0}},{"name":"assert.containsText","args":["\"#column-b\"","\"A\""],"startTime":1725004888435,"endTime":1725004888497,"elapsedTime":62,"status":"pass","result":{"status":0}},{"name":"pause","args":["5000"],"startTime":1725004888498,"endTime":1725004893504,"elapsedTime":5006,"status":"pass"},{"name":"saveScreenshot","args":["\"./test/screenshots/dragged.png\""],"startTime":1725004893504,"endTime":1725004893632,"elapsedTime":128,"status":"pass","result":{"status":0}},{"name":"pause","args":["5000"],"startTime":1725004893632,"endTime":1725004898639,"elapsedTime":5007,"status":"pass"}],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1725004876165,"httpOutput":[["2024-08-30T08:01:16.176Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/url  ","{ url: \u001b[32m&#39;https://the-internet.herokuapp.com/drag_and_drop&#39;\u001b[39m }"],["2024-08-30T08:01:26.195Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/url (10018ms)","{ value: \u001b[1mnull\u001b[22m }"],["2024-08-30T08:01:26.204Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/window/maximize  ","{ windowHandle: \u001b[32m&#39;current&#39;\u001b[39m }"],["2024-08-30T08:01:26.265Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/window/maximize (62ms)","{ value: { height: \u001b[33m768\u001b[39m, width: \u001b[33m1296\u001b[39m, x: \u001b[33m-8\u001b[39m, y: \u001b[33m-8\u001b[39m } }"],["2024-08-30T08:01:28.294Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: \u001b[32m&#39;css selector&#39;\u001b[39m, value: \u001b[32m&#39;#content &gt; div &gt; h3&#39;\u001b[39m }"],["2024-08-30T08:01:28.316Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (22ms)","{\n     value: [\n       {\n         \u001b[32m&#39;element-6066-11e4-a52e-4f735466cecf&#39;\u001b[39m: \u001b[32m&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11&#39;\u001b[39m\n       }\n     ]\n  }"],["2024-08-30T08:01:28.320Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync  ","{\n     script: \u001b[32m&#39;/* isDisplayed */return (function(){return (function(){var g=this||self;\\n&#39;\u001b[39m +\n       \u001b[32m&#39;function aa(a){var b=typeof a;if(&quot;object&quot;==b)if(a){if(a instanceof Array)return&quot;array&quot;;if(a instanceof Object)return b;var c=Ob... (16987 characters)&#39;\u001b[39m,\n     args: [\n       {\n         \u001b[32m&#39;element-6066-11e4-a52e-4f735466cecf&#39;\u001b[39m: \u001b[32m&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11&#39;\u001b[39m,\n         ELEMENT: \u001b[32m&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11&#39;\u001b[39m\n       }\n     ]\n  }"],["2024-08-30T08:01:28.333Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync (14ms)","{ value: \u001b[33mtrue\u001b[39m }"],["2024-08-30T08:01:28.355Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync  ","{\n     script: \u001b[32m&#39;  (function(selectorDraggable, selectorDroppable) {\\n&#39;\u001b[39m +\n       \u001b[32m&#39;    var __extends = (this &amp;&amp; this.__extends) || function (d, b) {\\n&#39;\u001b[39m +\n       \u001b[32m&#39;    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\\n&#39;\u001b[39m +\n       \u001b[32m&#39;    function __() { thi... (20178 characters)&#39;\u001b[39m,\n     args: [ \u001b[32m&#39;#column-a&#39;\u001b[39m, \u001b[32m&#39;#column-b&#39;\u001b[39m ]\n  }"],["2024-08-30T08:01:28.369Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync (15ms)","{ value: \u001b[1mnull\u001b[22m }"],["2024-08-30T08:01:28.381Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: \u001b[32m&#39;css selector&#39;\u001b[39m, value: \u001b[32m&#39;#column-a&#39;\u001b[39m }"],["2024-08-30T08:01:28.400Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (20ms)","{\n     value: [\n       {\n         \u001b[32m&#39;element-6066-11e4-a52e-4f735466cecf&#39;\u001b[39m: \u001b[32m&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6&#39;\u001b[39m\n       }\n     ]\n  }"],["2024-08-30T08:01:28.402Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6/text  ","\u001b[32m&#39;&#39;\u001b[39m"],["2024-08-30T08:01:28.425Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6/text (22ms)","{ value: \u001b[32m&#39;B&#39;\u001b[39m }"],["2024-08-30T08:01:28.454Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: \u001b[32m&#39;css selector&#39;\u001b[39m, value: \u001b[32m&#39;#column-b&#39;\u001b[39m }"],["2024-08-30T08:01:28.478Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (24ms)","{\n     value: [\n       {\n         \u001b[32m&#39;element-6066-11e4-a52e-4f735466cecf&#39;\u001b[39m: \u001b[32m&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7&#39;\u001b[39m\n       }\n     ]\n  }"],["2024-08-30T08:01:28.479Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7/text  ","\u001b[32m&#39;&#39;\u001b[39m"],["2024-08-30T08:01:28.496Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7/text (17ms)","{ value: \u001b[32m&#39;A&#39;\u001b[39m }"],["2024-08-30T08:01:33.521Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/screenshot  ","\u001b[32m&#39;&#39;\u001b[39m"],["2024-08-30T08:01:33.628Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/screenshot (101ms)","{\n     value: \u001b[32m&#39;iVBORw0KGgoAAAANSUhEUgAAB4AAAAOYCAIAAAC7Cnl0AAAAAXNSR0IArs4c6QAAIABJREFUeJzs3XlwXOWdL/znbH26Ty9SS2pt...&#39;\u001b[39m,\n     suppressBase64Data: \u001b[33mtrue\u001b[39m\n  }"]],"endTimestamp":1725004898640,"timeMs":22475},"afterEach":{"time":"0.000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1725004898641,"httpOutput":[],"endTimestamp":1725004898641,"timeMs":0},"timeMs":22478,"endTimestamp":1725004898642},"__after_hook":{"time":"0.000","assertions":[],"commands":[],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1725004898644,"httpOutput":[],"timeMs":0,"endTimestamp":1725004898644},"__global_afterEach_hook":{"time":"0.001000","assertions":[],"commands":[{"name":"end","args":["true"],"startTime":1725004898646,"endTime":1725004898732,"elapsedTime":86,"status":"pass"}],"passed":0,"errors":0,"failed":0,"skipped":0,"tests":0,"status":"pass","startTimestamp":1725004898644,"httpOutput":[],"timeMs":1,"endTimestamp":1725004898645}},"errmessages":[],"testsCount":1,"skippedCount":0,"failedCount":0,"errorsCount":0,"passedCount":3,"group":"","modulePath":"C:\\Users\\Dell\\OneDrive\\Documents\\NightWatchTests\\tests\\dragdrop.js","startTimestamp":"Fri, 30 Aug 2024 08:01:15 GMT","endTimestamp":"Fri, 30 Aug 2024 08:01:38 GMT","sessionCapabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"128.0.6613.86","chrome":{"chromedriverVersion":"127.0.6533.99 (f31af5097d90ef5ae5bd7b8700199bc6189ba34d-refs/branch-heads/6533@{#1910})","userDataDir":"C:\\Users\\Dell\\AppData\\Local\\Temp\\scoped_dir23164_1879389421"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:49937"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"135bd01a1dc0388f113168dad13e8aba","projectName":"","buildName":"","testEnv":"chrome","isMobile":false,"status":"pass","seleniumLog":"C:\\Users\\Dell\\OneDrive\\Documents\\NightWatchTests\\logs\\dragdrop_chromedriver.log","host":"localhost","name":"Dragdrop","tags":[],"tests":1,"failures":0,"errors":0,"httpOutput":[["2024-08-30T08:01:15.591Z","  Request POST /session  ","{\n     capabilities: {\n       firstMatch: [ {} ],\n       alwaysMatch: {\n         browserName: <span style=\"color:#0A0\">&#39;chrome&#39;<span style=\"color:#FFF\">,\n         <span style=\"color:#0A0\">&#39;goog:chromeOptions&#39;<span style=\"color:#FFF\">: { w3c: <span style=\"color:#A50\">true<span style=\"color:#FFF\">, args: [] }\n       }\n     }\n  }</span></span></span></span></span></span>"],["2024-08-30T08:01:16.160Z","  Response 200 POST /session (573ms)","{\n     value: {\n       capabilities: {\n         acceptInsecureCerts: <span style=\"color:#A50\">false<span style=\"color:#FFF\">,\n         browserName: <span style=\"color:#0A0\">&#39;chrome&#39;<span style=\"color:#FFF\">,\n         browserVersion: <span style=\"color:#0A0\">&#39;128.0.6613.86&#39;<span style=\"color:#FFF\">,\n         chrome: {\n           chromedriverVersion: <span style=\"color:#0A0\">&#39;127.0.6533.99 (f31af5097d90ef5ae5bd7b8700199bc6189ba34d-refs/branch-heads/6533@{#1910})&#39;<span style=\"color:#FFF\">,\n           userDataDir: <span style=\"color:#0A0\">&#39;C:\\\\Users\\\\Dell\\\\AppData\\\\Local\\\\Temp\\\\scoped_dir23164_1879389421&#39;<span style=\"color:#FFF\">\n         },\n         <span style=\"color:#0A0\">&#39;fedcm:accounts&#39;<span style=\"color:#FFF\">: <span style=\"color:#A50\">true<span style=\"color:#FFF\">,\n         <span style=\"color:#0A0\">&#39;goog:chromeOptions&#39;<span style=\"color:#FFF\">: { debuggerAddress: <span style=\"color:#0A0\">&#39;localhost:49937&#39;<span style=\"color:#FFF\"> },\n         networkConnectionEnabled: <span style=\"color:#A50\">false<span style=\"color:#FFF\">,\n         pageLoadStrategy: <span style=\"color:#0A0\">&#39;normal&#39;<span style=\"color:#FFF\">,\n         platformName: <span style=\"color:#0A0\">&#39;windows&#39;<span style=\"color:#FFF\">,\n         proxy: {},\n         setWindowRect: <span style=\"color:#A50\">true<span style=\"color:#FFF\">,\n         strictFileInteractability: <span style=\"color:#A50\">false<span style=\"color:#FFF\">,\n         timeouts: { implicit: <span style=\"color:#A50\">0<span style=\"color:#FFF\">, pageLoad: <span style=\"color:#A50\">300000<span style=\"color:#FFF\">, script: <span style=\"color:#A50\">30000<span style=\"color:#FFF\"> },\n         unhandledPromptBehavior: <span style=\"color:#0A0\">&#39;dismiss and notify&#39;<span style=\"color:#FFF\">,\n         <span style=\"color:#0A0\">&#39;webauthn:extension:credBlob&#39;<span style=\"color:#FFF\">: <span style=\"color:#A50\">true<span style=\"color:#FFF\">,\n         <span style=\"color:#0A0\">&#39;webauthn:extension:largeBlob&#39;<span style=\"color:#FFF\">: <span style=\"color:#A50\">true<span style=\"color:#FFF\">,\n         <span style=\"color:#0A0\">&#39;webauthn:extension:minPinLength&#39;<span style=\"color:#FFF\">: <span style=\"color:#A50\">true<span style=\"color:#FFF\">,\n         <span style=\"color:#0A0\">&#39;webauthn:extension:prf&#39;<span style=\"color:#FFF\">: <span style=\"color:#A50\">true<span style=\"color:#FFF\">,\n         <span style=\"color:#0A0\">&#39;webauthn:virtualAuthenticators&#39;<span style=\"color:#FFF\">: <span style=\"color:#A50\">true<span style=\"color:#FFF\">\n       },\n       sessionId: <span style=\"color:#0A0\">&#39;135bd01a1dc0388f113168dad13e8aba&#39;<span style=\"color:#FFF\">\n     }\n  }</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>"],["2024-08-30T08:01:16.176Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/url  ","{ url: <span style=\"color:#0A0\">&#39;https://the-internet.herokuapp.com/drag_and_drop&#39;<span style=\"color:#FFF\"> }</span></span>"],["2024-08-30T08:01:26.195Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/url (10018ms)","{ value: <b>null<span style=\"font-weight:normal;text-decoration:none;font-style:normal\"> }</span></b>"],["2024-08-30T08:01:26.204Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/window/maximize  ","{ windowHandle: <span style=\"color:#0A0\">&#39;current&#39;<span style=\"color:#FFF\"> }</span></span>"],["2024-08-30T08:01:26.265Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/window/maximize (62ms)","{ value: { height: <span style=\"color:#A50\">768<span style=\"color:#FFF\">, width: <span style=\"color:#A50\">1296<span style=\"color:#FFF\">, x: <span style=\"color:#A50\">-8<span style=\"color:#FFF\">, y: <span style=\"color:#A50\">-8<span style=\"color:#FFF\"> } }</span></span></span></span></span></span></span></span>"],["2024-08-30T08:01:28.294Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: <span style=\"color:#0A0\">&#39;css selector&#39;<span style=\"color:#FFF\">, value: <span style=\"color:#0A0\">&#39;#content &gt; div &gt; h3&#39;<span style=\"color:#FFF\"> }</span></span></span></span>"],["2024-08-30T08:01:28.316Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (22ms)","{\n     value: [\n       {\n         <span style=\"color:#0A0\">&#39;element-6066-11e4-a52e-4f735466cecf&#39;<span style=\"color:#FFF\">: <span style=\"color:#0A0\">&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11&#39;<span style=\"color:#FFF\">\n       }\n     ]\n  }</span></span></span></span>"],["2024-08-30T08:01:28.320Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync  ","{\n     script: <span style=\"color:#0A0\">&#39;/* isDisplayed */return (function(){return (function(){var g=this||self;\\n&#39;<span style=\"color:#FFF\"> +\n       <span style=\"color:#0A0\">&#39;function aa(a){var b=typeof a;if(&quot;object&quot;==b)if(a){if(a instanceof Array)return&quot;array&quot;;if(a instanceof Object)return b;var c=Ob... (16987 characters)&#39;<span style=\"color:#FFF\">,\n     args: [\n       {\n         <span style=\"color:#0A0\">&#39;element-6066-11e4-a52e-4f735466cecf&#39;<span style=\"color:#FFF\">: <span style=\"color:#0A0\">&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11&#39;<span style=\"color:#FFF\">,\n         ELEMENT: <span style=\"color:#0A0\">&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11&#39;<span style=\"color:#FFF\">\n       }\n     ]\n  }</span></span></span></span></span></span></span></span></span></span>"],["2024-08-30T08:01:28.333Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync (14ms)","{ value: <span style=\"color:#A50\">true<span style=\"color:#FFF\"> }</span></span>"],["2024-08-30T08:01:28.355Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync  ","{\n     script: <span style=\"color:#0A0\">&#39;  (function(selectorDraggable, selectorDroppable) {\\n&#39;<span style=\"color:#FFF\"> +\n       <span style=\"color:#0A0\">&#39;    var __extends = (this &amp;&amp; this.__extends) || function (d, b) {\\n&#39;<span style=\"color:#FFF\"> +\n       <span style=\"color:#0A0\">&#39;    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\\n&#39;<span style=\"color:#FFF\"> +\n       <span style=\"color:#0A0\">&#39;    function __() { thi... (20178 characters)&#39;<span style=\"color:#FFF\">,\n     args: [ <span style=\"color:#0A0\">&#39;#column-a&#39;<span style=\"color:#FFF\">, <span style=\"color:#0A0\">&#39;#column-b&#39;<span style=\"color:#FFF\"> ]\n  }</span></span></span></span></span></span></span></span></span></span></span></span>"],["2024-08-30T08:01:28.369Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync (15ms)","{ value: <b>null<span style=\"font-weight:normal;text-decoration:none;font-style:normal\"> }</span></b>"],["2024-08-30T08:01:28.381Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: <span style=\"color:#0A0\">&#39;css selector&#39;<span style=\"color:#FFF\">, value: <span style=\"color:#0A0\">&#39;#column-a&#39;<span style=\"color:#FFF\"> }</span></span></span></span>"],["2024-08-30T08:01:28.400Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (20ms)","{\n     value: [\n       {\n         <span style=\"color:#0A0\">&#39;element-6066-11e4-a52e-4f735466cecf&#39;<span style=\"color:#FFF\">: <span style=\"color:#0A0\">&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6&#39;<span style=\"color:#FFF\">\n       }\n     ]\n  }</span></span></span></span>"],["2024-08-30T08:01:28.402Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6/text  ","<span style=\"color:#0A0\">&#39;&#39;<span style=\"color:#FFF\"></span></span>"],["2024-08-30T08:01:28.425Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6/text (22ms)","{ value: <span style=\"color:#0A0\">&#39;B&#39;<span style=\"color:#FFF\"> }</span></span>"],["2024-08-30T08:01:28.454Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: <span style=\"color:#0A0\">&#39;css selector&#39;<span style=\"color:#FFF\">, value: <span style=\"color:#0A0\">&#39;#column-b&#39;<span style=\"color:#FFF\"> }</span></span></span></span>"],["2024-08-30T08:01:28.478Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (24ms)","{\n     value: [\n       {\n         <span style=\"color:#0A0\">&#39;element-6066-11e4-a52e-4f735466cecf&#39;<span style=\"color:#FFF\">: <span style=\"color:#0A0\">&#39;f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7&#39;<span style=\"color:#FFF\">\n       }\n     ]\n  }</span></span></span></span>"],["2024-08-30T08:01:28.479Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7/text  ","<span style=\"color:#0A0\">&#39;&#39;<span style=\"color:#FFF\"></span></span>"],["2024-08-30T08:01:28.496Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7/text (17ms)","{ value: <span style=\"color:#0A0\">&#39;A&#39;<span style=\"color:#FFF\"> }</span></span>"],["2024-08-30T08:01:33.521Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/screenshot  ","<span style=\"color:#0A0\">&#39;&#39;<span style=\"color:#FFF\"></span></span>"],["2024-08-30T08:01:33.628Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/screenshot (101ms)","{\n     value: <span style=\"color:#0A0\">&#39;iVBORw0KGgoAAAANSUhEUgAAB4AAAAOYCAIAAAC7Cnl0AAAAAXNSR0IArs4c6QAAIABJREFUeJzs3XlwXOWdL/znbH26Ty9SS2pt...&#39;<span style=\"color:#FFF\">,\n     suppressBase64Data: <span style=\"color:#A50\">true<span style=\"color:#FFF\">\n  }</span></span></span></span>"],["2024-08-30T08:01:38.649Z","  Request DELETE /session/135bd01a1dc0388f113168dad13e8aba  ","<span style=\"color:#0A0\">&#39;&#39;<span style=\"color:#FFF\"></span></span>"],["2024-08-30T08:01:38.730Z","  Response 200 DELETE /session/135bd01a1dc0388f113168dad13e8aba (81ms)","{ value: <b>null<span style=\"font-weight:normal;text-decoration:none;font-style:normal\"> }</span></b>"]],"rawHttpOutput":[["2024-08-30T08:01:15.591Z","  Request POST /session  ","{\n     capabilities: {\n       firstMatch: [ {} ],\n       alwaysMatch: {\n         browserName: 'chrome',\n         'goog:chromeOptions': { w3c: true, args: [] }\n       }\n     }\n  }"],["2024-08-30T08:01:16.160Z","  Response 200 POST /session (573ms)","{\n     value: {\n       capabilities: {\n         acceptInsecureCerts: false,\n         browserName: 'chrome',\n         browserVersion: '128.0.6613.86',\n         chrome: {\n           chromedriverVersion: '127.0.6533.99 (f31af5097d90ef5ae5bd7b8700199bc6189ba34d-refs/branch-heads/6533@{#1910})',\n           userDataDir: 'C:\\\\Users\\\\Dell\\\\AppData\\\\Local\\\\Temp\\\\scoped_dir23164_1879389421'\n         },\n         'fedcm:accounts': true,\n         'goog:chromeOptions': { debuggerAddress: 'localhost:49937' },\n         networkConnectionEnabled: false,\n         pageLoadStrategy: 'normal',\n         platformName: 'windows',\n         proxy: {},\n         setWindowRect: true,\n         strictFileInteractability: false,\n         timeouts: { implicit: 0, pageLoad: 300000, script: 30000 },\n         unhandledPromptBehavior: 'dismiss and notify',\n         'webauthn:extension:credBlob': true,\n         'webauthn:extension:largeBlob': true,\n         'webauthn:extension:minPinLength': true,\n         'webauthn:extension:prf': true,\n         'webauthn:virtualAuthenticators': true\n       },\n       sessionId: '135bd01a1dc0388f113168dad13e8aba'\n     }\n  }"],["2024-08-30T08:01:16.176Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/url  ","{ url: 'https://the-internet.herokuapp.com/drag_and_drop' }"],["2024-08-30T08:01:26.195Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/url (10018ms)","{ value: null }"],["2024-08-30T08:01:26.204Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/window/maximize  ","{ windowHandle: 'current' }"],["2024-08-30T08:01:26.265Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/window/maximize (62ms)","{ value: { height: 768, width: 1296, x: -8, y: -8 } }"],["2024-08-30T08:01:28.294Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: 'css selector', value: '#content &gt; div &gt; h3' }"],["2024-08-30T08:01:28.316Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (22ms)","{\n     value: [\n       {\n         'element-6066-11e4-a52e-4f735466cecf': 'f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11'\n       }\n     ]\n  }"],["2024-08-30T08:01:28.320Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync  ","{\n     script: '/* isDisplayed */return (function(){return (function(){var g=this||self;\\n' +\n       'function aa(a){var b=typeof a;if(&quot;object&quot;==b)if(a){if(a instanceof Array)return&quot;array&quot;;if(a instanceof Object)return b;var c=Ob... (16987 characters)',\n     args: [\n       {\n         'element-6066-11e4-a52e-4f735466cecf': 'f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11',\n         ELEMENT: 'f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.11'\n       }\n     ]\n  }"],["2024-08-30T08:01:28.333Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync (14ms)","{ value: true }"],["2024-08-30T08:01:28.355Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync  ","{\n     script: '  (function(selectorDraggable, selectorDroppable) {\\n' +\n       '    var __extends = (this &amp;&amp; this.__extends) || function (d, b) {\\n' +\n       '    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\\n' +\n       '    function __() { thi... (20178 characters)',\n     args: [ '#column-a', '#column-b' ]\n  }"],["2024-08-30T08:01:28.369Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/execute/sync (15ms)","{ value: null }"],["2024-08-30T08:01:28.381Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: 'css selector', value: '#column-a' }"],["2024-08-30T08:01:28.400Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (20ms)","{\n     value: [\n       {\n         'element-6066-11e4-a52e-4f735466cecf': 'f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6'\n       }\n     ]\n  }"],["2024-08-30T08:01:28.402Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6/text  ","''"],["2024-08-30T08:01:28.425Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.6/text (22ms)","{ value: 'B' }"],["2024-08-30T08:01:28.454Z","  Request POST /session/135bd01a1dc0388f113168dad13e8aba/elements  ","{ using: 'css selector', value: '#column-b' }"],["2024-08-30T08:01:28.478Z","  Response 200 POST /session/135bd01a1dc0388f113168dad13e8aba/elements (24ms)","{\n     value: [\n       {\n         'element-6066-11e4-a52e-4f735466cecf': 'f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7'\n       }\n     ]\n  }"],["2024-08-30T08:01:28.479Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7/text  ","''"],["2024-08-30T08:01:28.496Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/element/f.90A2AE204D797B71E0F6F38BD839299D.d.ED8CD424A1FDB11B98AB08210125F0DF.e.7/text (17ms)","{ value: 'A' }"],["2024-08-30T08:01:33.521Z","  Request GET /session/135bd01a1dc0388f113168dad13e8aba/screenshot  ","''"],["2024-08-30T08:01:33.628Z","  Response 200 GET /session/135bd01a1dc0388f113168dad13e8aba/screenshot (101ms)","{\n     value: 'iVBORw0KGgoAAAANSUhEUgAAB4AAAAOYCAIAAAC7Cnl0AAAAAXNSR0IArs4c6QAAIABJREFUeJzs3XlwXOWdL/znbH26Ty9SS2pt...',\n     suppressBase64Data: true\n  }"],["2024-08-30T08:01:38.649Z","  Request DELETE /session/135bd01a1dc0388f113168dad13e8aba  ","''"],["2024-08-30T08:01:38.730Z","  Response 200 DELETE /session/135bd01a1dc0388f113168dad13e8aba (81ms)","{ value: null }"]]},"name":"dragdrop","httpOutput":[],"systemerr":""}